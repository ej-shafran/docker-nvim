local Command = require('docker.command')

---@type docker.cli.image.build.Opts
local _opts

return Command.new({ 'image', 'build' })
  :add_option({ name = 'allow', type = 'string', list = true })
  :add_option({ name = 'attest', type = 'string', list = true })
  :add_option({ name = 'build_arg', type = 'string', list = true })
  :add_option({ name = 'cache_from', type = 'string', list = true })
  :add_option({ name = 'cache_to', type = 'string', list = true })
  :add_option({ name = 'label', type = 'string', list = true })
  :add_option({ name = 'no_cache_filter', type = 'string', list = true })
  :add_option({ name = 'output', type = 'string', list = true })
  :add_option({ name = 'platform', type = 'string', list = true })
  :add_option({ name = 'secret', type = 'string', list = true })
  :add_option({ name = 'ssh', type = 'string', list = true })
  :add_option({ name = 'tag', type = 'string', list = true })
  :add_option({ name = 'ulimit', type = 'string', list = true })
  :add_option({ name = 'build_context', type = 'record' })
  :add_option({ name = 'builder', type = 'string' })
  :add_option({ name = 'cgroup_parent', type = 'string' })
  :add_option({ name = 'file', type = 'string' })
  :add_option({ name = 'iidfile', type = 'string' })
  :add_option({ name = 'metadata_file', type = 'string' })
  :add_option({ name = 'network', type = 'string' })
  :add_option({ name = 'no_cache', type = 'boolean' })
  :add_option({ name = 'pull', type = 'boolean' })
  :add_option({ name = 'quiet', type = 'boolean' })
  :add_option({ name = 'shm_size', type = 'bytes' })
  :add_option({ name = 'target', type = 'string' })
  :build_with_arg(_opts)
